"""Initial migration with all models

Revision ID: 423732c4aa16
Revises: 
Create Date: 2025-07-22 22:09:46.955647

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '423732c4aa16'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('checklists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('itens', sa.JSON(), nullable=True),
    sa.Column('ativo', sa.Boolean(), server_default='1', nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('empresas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('razao_social', sa.String(length=200), nullable=False),
    sa.Column('protocolo', sa.String(), nullable=True),
    sa.Column('cnpj', sa.String(length=18), nullable=False),
    sa.Column('nome_fantasia', sa.String(length=200), nullable=True),
    sa.Column('porte', sa.String(), nullable=True),
    sa.Column('data_abertura', sa.String(), nullable=True),
    sa.Column('situacao_cadastral', sa.String(), nullable=True),
    sa.Column('cnae_principal', sa.String(length=20), nullable=True),
    sa.Column('cnae_secundario', sa.String(), nullable=True),
    sa.Column('horario_segunda_feira', sa.String(length=50), nullable=True),
    sa.Column('horario_terca_feira', sa.String(length=50), nullable=True),
    sa.Column('horario_quarta_feira', sa.String(length=50), nullable=True),
    sa.Column('horario_quinta_feira', sa.String(length=50), nullable=True),
    sa.Column('horario_sexta_feira', sa.String(length=50), nullable=True),
    sa.Column('horario_sabado', sa.String(length=50), nullable=True),
    sa.Column('horario_domingo', sa.String(length=50), nullable=True),
    sa.Column('funciona_feriado', sa.String(length=10), nullable=True),
    sa.Column('horario_feriado', sa.String(length=50), nullable=True),
    sa.Column('endereco', sa.String(length=255), nullable=True),
    sa.Column('bairro', sa.String(length=100), nullable=True),
    sa.Column('cidade', sa.String(length=100), nullable=True),
    sa.Column('telefone_empresa', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('responsavel_juridico_nome', sa.String(length=150), nullable=True),
    sa.Column('responsavel_juridico_cpf', sa.String(length=14), nullable=True),
    sa.Column('responsavel_juridico_tel', sa.String(length=20), nullable=True),
    sa.Column('contador_presente', sa.Boolean(), nullable=False),
    sa.Column('contador_nome', sa.String(length=150), nullable=True),
    sa.Column('contador_cpf', sa.String(length=14), nullable=True),
    sa.Column('contador_tel', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('justificativa_status', sa.Text(), nullable=True),
    sa.Column('data_cadastro', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnpj')
    )
    op.create_table('irregularidades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=200), nullable=False),
    sa.Column('infracao', sa.String(length=200), nullable=True),
    sa.Column('inciso', sa.Text(), nullable=True),
    sa.Column('explicacao', sa.Text(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocolos_sequenciais',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('categoria', sa.String(length=50), nullable=False),
    sa.Column('ultimo_numero', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ano', 'categoria', name='_ano_categoria_uc')
    )
    op.create_table('solicitacoes_calazar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('protocolo', sa.String(length=50), nullable=False),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=False),
    sa.Column('proprietario_nome', sa.String(length=150), nullable=False),
    sa.Column('proprietario_cpf', sa.String(length=14), nullable=True),
    sa.Column('proprietario_endereco', sa.String(length=255), nullable=False),
    sa.Column('proprietario_telefone', sa.String(length=20), nullable=False),
    sa.Column('animal_nome', sa.String(length=100), nullable=False),
    sa.Column('animal_especie', sa.String(length=50), nullable=False),
    sa.Column('animal_raca', sa.String(length=100), nullable=False),
    sa.Column('animal_sexo', sa.String(length=10), nullable=True),
    sa.Column('animal_idade', sa.String(length=50), nullable=True),
    sa.Column('animal_cor', sa.String(length=50), nullable=True),
    sa.Column('animal_foto_path', sa.String(length=255), nullable=True),
    sa.Column('sinais_clinicos', sa.Text(), nullable=True),
    sa.Column('data_coleta_sugerida', sa.Date(), nullable=True),
    sa.Column('horario_coleta_sugerido', sa.Time(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('data_atendimento', sa.DateTime(), nullable=True),
    sa.Column('data_realizacao_teste', sa.Date(), nullable=True),
    sa.Column('kit_utilizado', sa.String(length=100), nullable=True),
    sa.Column('lote_kit', sa.String(length=50), nullable=True),
    sa.Column('validade_kit', sa.Date(), nullable=True),
    sa.Column('resultado_teste_rapido', sa.String(length=50), nullable=True),
    sa.Column('tipo_teste_realizado', sa.String(length=50), nullable=True),
    sa.Column('enviado_lacen', sa.Boolean(), nullable=False),
    sa.Column('observacoes_resultado', sa.Text(), nullable=True),
    sa.Column('anamnese_veterinario', sa.Text(), nullable=True),
    sa.Column('veterinario_responsavel_nome', sa.String(length=150), nullable=True),
    sa.Column('veterinario_crmv', sa.String(length=50), nullable=True),
    sa.Column('resultado_liberado', sa.Boolean(), nullable=False),
    sa.Column('data_liberacao_resultado', sa.DateTime(), nullable=True),
    sa.Column('justificativa_recusa', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo')
    )
    op.create_table('solicitacoes_receituario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('protocolo', sa.String(length=50), nullable=False),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=False),
    sa.Column('cnpj_local', sa.String(length=18), nullable=False),
    sa.Column('nome_local', sa.String(length=200), nullable=False),
    sa.Column('endereco_local', sa.String(length=255), nullable=False),
    sa.Column('numero_local', sa.String(length=20), nullable=True),
    sa.Column('contato_local', sa.String(length=20), nullable=False),
    sa.Column('nome_profissional', sa.String(length=150), nullable=False),
    sa.Column('cpf_profissional', sa.String(length=14), nullable=False),
    sa.Column('conselho_profissional', sa.String(length=50), nullable=False),
    sa.Column('telefone_contato', sa.String(length=20), nullable=False),
    sa.Column('email_contato', sa.String(length=120), nullable=False),
    sa.Column('receituarios_solicitados_json', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('justificativa_recusa', sa.Text(), nullable=True),
    sa.Column('data_atendimento', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo')
    )
    op.create_table('tipos_receituario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('sigla', sa.String(length=10), nullable=False),
    sa.Column('cor_folha', sa.String(length=50), nullable=True),
    sa.Column('folhas_por_bloco', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome'),
    sa.UniqueConstraint('sigla')
    )
    op.create_table('atendimentos_receituario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('solicitacao_id', sa.Integer(), nullable=False),
    sa.Column('data_atendimento', sa.DateTime(), nullable=False),
    sa.Column('nome_recebedor', sa.String(length=150), nullable=False),
    sa.Column('cpf_recebedor', sa.String(length=14), nullable=False),
    sa.Column('telefone_recebedor', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['solicitacao_id'], ['solicitacoes_receituario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('autos_infracao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('protocolo_auto', sa.String(), nullable=False),
    sa.Column('data_auto', sa.DateTime(), nullable=False),
    sa.Column('descricao_infracao', sa.Text(), nullable=False),
    sa.Column('artigos_infringidos', sa.Text(), nullable=True),
    sa.Column('penalidades_sugeridas', sa.Text(), nullable=True),
    sa.Column('prazo_defesa_dias', sa.Integer(), nullable=True),
    sa.Column('fiscal_nome', sa.String(), nullable=True),
    sa.Column('anexos_path', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_auto')
    )
    op.create_table('checklist_perguntas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checklist_id', sa.Integer(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('texto_pergunta', sa.String(), nullable=False),
    sa.Column('ordem', sa.Integer(), nullable=True),
    sa.Column('tipo_resposta', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['checklist_id'], ['checklists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('denuncias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('protocolo_denuncia', sa.String(), nullable=False),
    sa.Column('data_denuncia', sa.DateTime(), nullable=True),
    sa.Column('anonimato', sa.Boolean(), nullable=True),
    sa.Column('denunciante_nome', sa.String(), nullable=True),
    sa.Column('denunciante_telefone', sa.String(), nullable=True),
    sa.Column('denunciante_email', sa.String(), nullable=True),
    sa.Column('denunciado_nome', sa.String(), nullable=True),
    sa.Column('denunciado_rua', sa.String(), nullable=True),
    sa.Column('denunciado_numero', sa.String(), nullable=True),
    sa.Column('denunciado_bairro', sa.String(), nullable=True),
    sa.Column('denunciado_municipio', sa.String(), nullable=True),
    sa.Column('denunciado_ponto_ref', sa.String(), nullable=True),
    sa.Column('denunciado_tipo_local', sa.String(), nullable=True),
    sa.Column('motivo_classificacao', sa.String(), nullable=True),
    sa.Column('motivo_descricao', sa.Text(), nullable=True),
    sa.Column('anexos_path', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('despacho_fiscal', sa.Text(), nullable=True),
    sa.Column('fiscal_anexos_path', sa.String(), nullable=True),
    sa.Column('cpf_vinculado', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_denuncia')
    )
    op.create_table('estoque_receituario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_id', sa.Integer(), nullable=False),
    sa.Column('quantidade_blocos_disponivel', sa.Integer(), nullable=False),
    sa.Column('quantidade_folhas_disponivel', sa.Integer(), nullable=False),
    sa.Column('data_ultima_atualizacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tipo_id'], ['tipos_receituario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tipo_id')
    )
    op.create_table('licencas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('protocolo_licencas', sa.String(length=50), nullable=False),
    sa.Column('ano_exercicio', sa.String(), nullable=True),
    sa.Column('tipo_atividade', sa.String(), nullable=True),
    sa.Column('descricao_atividade', sa.Text(), nullable=True),
    sa.Column('possui_local_fisico', sa.String(), nullable=True),
    sa.Column('ano_abertura_empresa', sa.Integer(), nullable=True),
    sa.Column('necessita_rt', sa.String(), nullable=True),
    sa.Column('rt_nome', sa.String(), nullable=True),
    sa.Column('rt_cpf', sa.String(), nullable=True),
    sa.Column('rt_contato', sa.String(length=20), nullable=True),
    sa.Column('rt_conselho', sa.String(), nullable=True),
    sa.Column('rt_numero_conselho', sa.String(), nullable=True),
    sa.Column('rt_declaracao_path', sa.String(), nullable=True),
    sa.Column('vende_controlados', sa.String(), nullable=True),
    sa.Column('afe_numero', sa.String(length=50), nullable=True),
    sa.Column('afe_path', sa.String(), nullable=True),
    sa.Column('manipula_medicamentos', sa.String(), nullable=True),
    sa.Column('vende_animais', sa.String(), nullable=True),
    sa.Column('rt_vet_nome', sa.String(), nullable=True),
    sa.Column('rt_vet_cpf', sa.String(), nullable=True),
    sa.Column('rt_vet_contato', sa.String(), nullable=True),
    sa.Column('rt_vet_conselho', sa.String(), nullable=True),
    sa.Column('rt_vet_numero_conselho', sa.String(), nullable=True),
    sa.Column('rt_vet_declaracao_path', sa.String(), nullable=True),
    sa.Column('atividade_principal_descrita', sa.Text(), nullable=True),
    sa.Column('realizou_dedetizacao', sa.String(), nullable=True),
    sa.Column('endereco_rua', sa.String(length=200), nullable=True),
    sa.Column('endereco_numero', sa.String(length=20), nullable=True),
    sa.Column('endereco_bairro', sa.String(length=100), nullable=True),
    sa.Column('endereco_referencia', sa.String(length=200), nullable=True),
    sa.Column('data_dedetizacao', sa.String(), nullable=True),
    sa.Column('certificado_dedetizacao_path', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('justificativa_status', sa.Text(), nullable=True),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=True),
    sa.Column('data_emissao', sa.Date(), nullable=True),
    sa.Column('data_vencimento', sa.Date(), nullable=True),
    sa.Column('alvara_pdf_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_licencas')
    )
    op.create_table('licencas_publicas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('protocolo_licencas_publicas', sa.String(), nullable=False),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('justificativa_status', sa.Text(), nullable=True),
    sa.Column('unidade_nome', sa.String(), nullable=True),
    sa.Column('unidade_cnes_inep', sa.String(), nullable=True),
    sa.Column('unidade_endereco', sa.String(), nullable=True),
    sa.Column('unidade_ponto_ref', sa.String(), nullable=True),
    sa.Column('unidade_tipo', sa.String(), nullable=True),
    sa.Column('unidade_tipo_outro', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_nome', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_cpf', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_cargo', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_conselho', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_contato', sa.String(), nullable=True),
    sa.Column('responsavel_unidade_declaracao_rt_path', sa.String(), nullable=True),
    sa.Column('atividades_desenvolvidas', sa.Text(), nullable=True),
    sa.Column('servicos_prestados', sa.Text(), nullable=True),
    sa.Column('possui_cozinha', sa.Boolean(), nullable=True),
    sa.Column('possui_farmacia', sa.Boolean(), nullable=True),
    sa.Column('anexo_declaracao_responsavel_path', sa.String(), nullable=True),
    sa.Column('anexo_declaracao_rt_geral_path', sa.String(), nullable=True),
    sa.Column('observacoes_adicionais', sa.Text(), nullable=True),
    sa.Column('ciencia_solicitante_nome', sa.String(), nullable=True),
    sa.Column('ciencia_solicitante_cargo', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_licencas_publicas')
    )
    op.create_table('notificacoes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('protocolo_notificacao', sa.String(), nullable=False),
    sa.Column('data_notificacao', sa.Date(), nullable=True),
    sa.Column('data_vistoria_origem', sa.Date(), nullable=True),
    sa.Column('irregularidades_constatadas', sa.Text(), nullable=True),
    sa.Column('prazo', sa.String(), nullable=True),
    sa.Column('ciencia_nome', sa.String(), nullable=True),
    sa.Column('ciencia_documento', sa.String(), nullable=True),
    sa.Column('fiscal_nome', sa.String(), nullable=True),
    sa.Column('fiscal_matricula', sa.String(), nullable=True),
    sa.Column('observacoes_adicionais', sa.Text(), nullable=True),
    sa.Column('anexos_path', sa.String(), nullable=True),
    sa.Column('parecer_final', sa.String(), nullable=True),
    sa.Column('justificativa_parecer', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_notificacao')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('vistoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('protocolo_vistoria', sa.String(length=50), nullable=True),
    sa.Column('status_analise', sa.String(length=50), server_default='Pendente', nullable=False),
    sa.Column('fotos', sa.JSON(), nullable=True),
    sa.Column('checklist_id', sa.Integer(), nullable=True),
    sa.Column('data_vistoria', sa.Date(), nullable=False),
    sa.Column('motivo', sa.String(length=100), nullable=True),
    sa.Column('documentacao_verificada', sa.JSON(), nullable=True),
    sa.Column('checklist_respostas', sa.JSON(), nullable=True),
    sa.Column('observacoes', sa.JSON(), nullable=True),
    sa.Column('fiscais', sa.JSON(), nullable=True),
    sa.Column('prazo_adequacao', sa.Date(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['checklist_id'], ['checklists.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('protocolo_vistoria')
    )
    op.create_table('blocos_receituario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_id', sa.Integer(), nullable=False),
    sa.Column('numero_bloco', sa.String(length=50), nullable=False),
    sa.Column('numero_inicial', sa.Integer(), nullable=False),
    sa.Column('numero_final', sa.Integer(), nullable=False),
    sa.Column('data_entrada_estoque', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('atendimento_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['atendimento_id'], ['atendimentos_receituario.id'], ),
    sa.ForeignKeyConstraint(['tipo_id'], ['tipos_receituario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vistoria_respostas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vistoria_id', sa.Integer(), nullable=False),
    sa.Column('pergunta_id', sa.Integer(), nullable=False),
    sa.Column('resposta', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pergunta_id'], ['checklist_perguntas.id'], ),
    sa.ForeignKeyConstraint(['vistoria_id'], ['vistoria.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vistoria_respostas')
    op.drop_table('blocos_receituario')
    op.drop_table('vistoria')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    op.drop_table('notificacoes')
    op.drop_table('licencas_publicas')
    op.drop_table('licencas')
    op.drop_table('estoque_receituario')
    op.drop_table('denuncias')
    op.drop_table('checklist_perguntas')
    op.drop_table('autos_infracao')
    op.drop_table('atendimentos_receituario')
    op.drop_table('tipos_receituario')
    op.drop_table('solicitacoes_receituario')
    op.drop_table('solicitacoes_calazar')
    op.drop_table('protocolos_sequenciais')
    op.drop_table('irregularidades')
    op.drop_table('empresas')
    op.drop_table('checklists')
    # ### end Alembic commands ###
